# pytest.ini - pytest configuration for Job Optimizer app
[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --color=yes
    --durations=10
    --maxfail=5
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    upload: marks tests related to file uploads
    api: marks tests for API endpoints
    database: marks tests that require database
    mock: marks tests that use mocking

# How to run the tests:

# Install test dependencies:
# pip install -r requirements-test.txt

# Run all tests:
# pytest

# Run specific test categories:
# pytest -m unit                    # Only unit tests
# pytest -m api                     # Only API tests
# pytest -m upload                  # Only upload tests
# pytest -m "not slow"              # Skip slow tests

# Run with coverage:
# pytest --cov=app --cov=database --cov-report=html

# Run specific test file:
# pytest tests/test_basic_functionality.py

# Run specific test class:
# pytest tests/test_basic_functionality.py::TestFileUpload

# Run specific test method:
# pytest tests/test_basic_functionality.py::TestFileUpload::test_upload_with_job_description_text_only

# Run tests verbosely:
# pytest -v -s

# Run tests and stop on first failure:
# pytest -x

# Generate HTML coverage report:
# pytest --cov=app --cov-report=html
# Then open htmlcov/index.html in your browser

# Directory structure for tests:
# your_project/
# ├── app.py
# ├── config.py
# ├── database/
# │   └── models.py
# ├── modules/
# │   ├── document_parser.py
# │   └── job_analyzer.py
# ├── tests/
# │   ├── __init__.py
# │   ├── conftest.py
# │   └── test_basic_functionality.py
# ├── pytest.ini
# └── requirements-test.txt